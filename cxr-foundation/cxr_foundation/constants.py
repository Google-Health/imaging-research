# /usr/bin/python
#
# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import dataclasses

# GCP project ID of the embeddings endpoint.
_EMBEDDINGS_PROJECT_NAME = 'gh-rad-validation-cxrembd-deid'
# Vertex was initially offered only in "us-central1".
_LOCATION = 'us-central1'

# ID of the V1 embeddings endpoint.
_V1_ENDPOINT_ID = 8327848403333545984
# IDs of the V2 embeddings endpoints.
_V2_C_ENDPOINT_ID = 3169498397715464192
_V2_B_ENDPOINT_ID = 2156540325277990912


@dataclasses.dataclass(frozen=True)
class VertexEndpoint:
  """Vertex AI end-point configuration.

  Fields
  ------
  project_name
    Name of the GCP Project which hosts the model.
  endpoint_location
    GCP Location (Zone) where the Vertex AI end-point is hosted.
  endpoint_id
    Numeric ID for the hosted end-point.
  """

  project_name: str
  endpoint_location: str
  endpoint_id: int


# End-point configuration for the CXR Foundation V1 model.
ENDPOINT_V1 = VertexEndpoint(
    project_name=_EMBEDDINGS_PROJECT_NAME,
    endpoint_location=_LOCATION,
    endpoint_id=_V1_ENDPOINT_ID,
)


# End-point configurations for the CXR Foundation V2 model.
ENDPOINT_V2_C = VertexEndpoint(
    project_name=_EMBEDDINGS_PROJECT_NAME,
    endpoint_location=_LOCATION,
    endpoint_id=_V2_C_ENDPOINT_ID,
)
ENDPOINT_V2_B = VertexEndpoint(
    project_name=_EMBEDDINGS_PROJECT_NAME,
    endpoint_location=_LOCATION,
    endpoint_id=_V2_B_ENDPOINT_ID,
)


GCS_PREFIX = 'gs://'

# tf.Example feature keys required by the embeddings service
IMAGE_KEY = 'image/encoded'
IMAGE_FORMAT_KEY = 'image/format'

# Key for this library to serialize generated embeddings
EMBEDDING_KEY = 'embedding'

# The size of the float vector embeddings generated by the CXR foundation API
DEFAULT_EMBEDDINGS_SIZE = 1376
